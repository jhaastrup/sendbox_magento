<html>
<head>
<style>
h2{
    color: #41362f;
    font-weight: 400;
    line-height: 1.2;
    font-size: 2rem;
}
</style>
</head>
<body> 
<?php 
class Sendbox_Shipping_API{
    //make a post to sendbox api using curl.
    public function post_on_api_by_curl($url, $data, $api_key)
    {
        $ch = curl_init($url);
        // Setup request to send json via POST.
        curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
        curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type:application/json', 'Authorization:' . $api_key));
        // Return response instead of printing.
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        // Send request.
        $result = curl_exec($ch);
        curl_close($ch);
        // Print response.
        return $result;
    }
  
    //make a get request using curl to sendbox
  
    public function get_api_response_by_curl($url)
    {
        $handle = curl_init();
        curl_setopt($handle, CURLOPT_URL, $url);
        curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);
        $output = curl_exec($handle);
        curl_close($handle);
        return $output;
    }
    //make request to sendbox with header
  
    public function get_api_response_with_header($url, $request_headers){
        $ch = curl_init($url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_HTTPHEADER, $request_headers);
        $season_data = curl_exec($ch);
        if (curl_errno($ch)) {
            print "Error: " . curl_error($ch);
            exit();
        }
        // Show me the result
        curl_close($ch);
        return $season_data;
  
    }
  
  
    //all sendbox endpoints
    public function get_sendbox_api_url($url_type)
    {
        if ('delivery_quote' == $url_type) {
            $url = 'https://live.sendbox.co/shipping/shipment_delivery_quote';
        } elseif ('countries' == $url_type) {
            $url = 'https://api.sendbox.co/auth/countries?page_by={' . '"per_page"' . ':264}';
        } elseif ('states' == $url_type) {
            $url = 'https://api.sendbox.co/auth/states';
        } elseif ('shipments' == $url_type) {
            $url = 'https://live.sendbox.co/shipping/shipments';
        } elseif('payment' == $url_type){
        $url = 'https://live.sendbox.co/payments/profile';
        }
        elseif ('item_type' == $url_type) {
            $url = 'https://api.sendbox.ng/v1/item_types';
        } elseif ('profile' == $url_type) {
            $url = 'https://live.sendbox.co/oauth/profile';
        }else {
            $url = '';
        }
        return $url;
    }
  
  
  } 

   //GET WALLET BALANCE

        function wallet_balance(){ 
        $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
        $resource = $objectManager->get('Magento\Framework\App\ResourceConnection');
        $connection = $resource->getConnection();
        $tableName = $resource->getTableName("sendbox");

        $sql = "SELECT * FROM " . $tableName;
        $result = $connection->fetchAll($sql);
        foreach( $result as $value ){
         $api_key = $value['auth_token'];
        }

    $sendbox_obj = new Sendbox_Shipping_API();
    $auth_header = $api_key;
    $type = "application/json";

    $request_headers = array(
        "Content-Type: " .$type,
        "Authorization: " .$api_key,
    ); 
    $payment_url = $sendbox_obj->get_sendbox_api_url('payment');
    $payment_res = $sendbox_obj->get_api_response_with_header($payment_url,$request_headers);
    $payment_obj = json_decode($payment_res);
     $wallet_balance = $payment_obj->funds;
     return $wallet_balance;
     
}

// Get quotes for rates
            $orderId = $this->getRequest()->getParam('order_id');
            $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
            $resource = $objectManager->get('Magento\Framework\App\ResourceConnection');
        $connection = $resource->getConnection();
        $tableName = $resource->getTableName("sendbox");
        
        $sql = "SELECT * FROM " . $tableName;
        $result = $connection->fetchAll($sql);
        foreach( $result as $value ){
         $api_key = $value['auth_token'];
        }
        $auth_header = $api_key;
        $type = "application/json";
        
        $request_headers = array(
        "Content-Type: " .$type,
        "Authorization: " .$api_key,
        ); 
            $order = $objectManager->create('\Magento\Sales\Model\OrderRepository')->get($orderId);
            $origin_country = "Nigeria";
            $origin_state =$this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/state');
            $origin_city = $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/city');
            $shippingaddress=$order->getShippingAddress();
            $destination_country = $shippingaddress->getCountryId();
            $destination_state = $shippingaddress->getRegionCode();
            $destination_city = $shippingaddress->getCity();
            $quantity = $order->getTotalItemCount();
            $weight = 0;
            $mee_weight = $order->getWeight();
            $weight += $mee_weight * $quantity;
            $params = array(
                'origin_country' => $origin_country,
                'origin_state' => $origin_state,
                'origin_city' => $origin_city,
                'destination_country_code'=>$destination_country,
                'destination_state' => $destination_state,
                'destination_city' => $destination_city,
                'weight' => $weight
             );  

             
         $payload = json_encode($params);
 
         // Prepare new cURL resource
         $ch = curl_init('https://live.sendbox.co/shipping/shipment_delivery_quote');
         curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
         curl_setopt($ch, CURLINFO_HEADER_OUT, true);
         curl_setopt($ch, CURLOPT_POST, true);
         curl_setopt($ch, CURLOPT_POSTFIELDS, $payload);
   
        // Set HTTP Header for POST request 
        curl_setopt($ch, CURLOPT_HTTPHEADER, array(
        'Content-Type: application/json',
        'Authorization:'.$api_key)
        );
   
      // Submit the POST request
             $result = curl_exec($ch);
             $sendbox_quotes = json_decode($result, true);
  
   
           // Close cURL session handle
              curl_close($ch);  
             $rates =$sendbox_quotes['rates'];
            
             $option_string ="";
		foreach ($rates as $rates_id => $rates_values){
			$rates_names = $rates_values['name'];
			$rates_fee   = $rates_values['fee'];
			$rates_id   = $rates_values['courier_id'];
		    $option_string.='<input name="rate" type ="radio" data-courier-price = '.$rates_fee.' value='.$rates_id.'> '.$rates_names.' <br/> </input>';
        } 

        //call shipment
        $origin_name = $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/fullname');
        $origin_phone = $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/phone');
        $origin_email = $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/email');
        $origin_street = $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/street');
        $f_name = $order->getCustomerFirstname();
        $l_name = $order->getCustomerLastname();
        $destination_name = $f_name ." ". $l_name;
        $destination_email = $order->getCustomerEmail();
        $destination_phone = $shippingaddress->getTelephone();
        $destination_city = $shippingaddress->getCity();
        $destination_street = $shippingaddress->getStreet()[0];
        $date = new DateTime();
		$date->modify('+1 day');
		$pickup_date = $date->format('c');
        $orderItems = $order->getAllItems();
        $item_list =[];

        foreach ($orderItems as $item) {
            //$item_data = array();
            $item_data = array(
                "name" => $item->getName(),
                "quantity" => round( $item->getQtyOrdered()),
                "value" =>  $item->getPrice(),
                "weight"=> $item->getWeight(),
               "item_type_code" =>"other",
                "package_size_code" => "medium"
            );
            

            array_push($item_list, $item_data);
            //$item->getStoreId();
            //$item->getProductId();
    
            //$item->getSku();
            //$item->getName();
            //$item->getQtyOrdered();
            //$item->getPrice();
         } 

         $shipment_params = array(
             'origin_name' => $origin_name,
            'origin_country' => $origin_country,
            'origin_state' => $origin_state,
            'origin_city' => $origin_city,
            'origin_phone'=> $origin_phone,
            'origin_email' =>$origin_email,
            'origin_street' => $origin_street,
            'destination_name'=> $destination_name,
            'destination_country_code'=>$destination_country,
            'destination_state' => $destination_state,
            'destination_city' => $destination_city,
            'destination_street' =>$destination_street,
            'destination_email' => $destination_email,
            'destination_phone'=>$destination_phone,
            'weight' => $weight,
            'items'=> $item_list,
            'payment_option_code' => 'prepaid',
            'channel_code' => "mobile_web",
            'pickup_date' => $pickup_date,
           'deliver_priority_code' => 'next_day',
           "api_key" => $api_key
          // 'selected_courier_id'=> $rates_id
         ); 

        
       // echo($shipment_payload);
         
           // Prepare new cURL resource for shipment
        //    $shipment = curl_init('https://live.sendbox.co/shipping/shipments');
        //    curl_setopt($shipment, CURLOPT_RETURNTRANSFER, true);
        //    curl_setopt($shipment, CURLINFO_HEADER_OUT, true);
        //    curl_setopt($shipment, CURLOPT_POST, true);
        //    curl_setopt($shipment, CURLOPT_POSTFIELDS, $shipment_payload);
     
          // Set HTTP Header for POST request 
        //   curl_setopt($shipment, CURLOPT_HTTPHEADER, array(
        //   'Content-Type: application/json',
        //   'Authorization:'.$api_key)
        //   );
     
        // Submit the POST request
            //    $shipment_res = curl_exec($shipment);
            //    $shipment_obj = json_decode($shipment_res, true);
               
     
             // Close cURL session handle
            //     curl_close($shipment);        
         
            // var_dump($shipment_obj);

        // var_dump($item_list);
       
/* $orderId = $this->getRequest()->getParam('order_id');
$objectManager = \Magento\Framework\App\ObjectManager::getInstance(); 
$order = $objectManager->create('\Magento\Sales\Model\OrderRepository')->get($orderId);

$custLastName= $order->getCustomerLastname();
$shippingaddress=$order->getShippingAddress();   
$orderItems = $order->getAllItems();

foreach ($orderItems as $item) {
    $item->getItemId();
    $item->getOrderId();
    $item->getStoreId();
    $item->getProductId();
 
    //print_r($item->getProductOptions());
 
    $item->getSku();
    $item->getName();
    $item->getQtyOrdered();
    $item->getPrice();
 }
 */

//var_dump($order->getTotalItemCount());


?>

<script>
function getCookie(cname) {
  var name = cname + "=";
  var decodedCookie = decodeURIComponent(document.cookie);
  var ca = decodedCookie.split(';');
  for(var i = 0; i <ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) == ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }

  return "";
}
   function docReady(fn) {
    // see if DOM is already available
    if (document.readyState === "complete" || document.readyState === "interactive") {
        // call on next available tick
        setTimeout(fn, 1);
    } else {
        document.addEventListener("DOMContentLoaded", fn);
    }
}    
 console.log('sometext');
 docReady(function() {
    //  console.log(document.cookie);
    var rad = document.getElementsByName("rate");
    rad.forEach((e) => {
        e.addEventListener('change', (() => {   
                 
            console.log(e);
    console.dir(e);
    const courierPrice = e.dataset.courierPrice;
    console.log(courierPrice)
    let feeTag = document.getElementById("fee");
    feeTag.innerText = ((courierPrice !== null && courierPrice !== undefined) ? "Fee: ₦"+ courierPrice : feeTag.innerText = "Fee: N0.00");    

}))
    })

    const form = document.getElementById("shipment-form");
    form.onsubmit = ((e) => {
        const rates = document.getElementsByName('rate');
        let rate_id;
        rates.forEach((e) => {
            if (e.checked){
                rate_id = e.value;
            };

        })
        if (!rate_id){
            alert("select rate")
            return
        }

        bookShipment(rate_id);
        console.log("eoeeoje");
        e.preventDefault();
    })
    async function postData(url = '', data = {}, api_key=null) {
  // Default options are marked with *
  const response = await fetch(url, {
    method: 'POST', // *GET, POST, PUT, DELETE, etc.
    mode: 'cors', // no-cors, *cors, same-origin
    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
    credentials: 'same-origin', // include, *same-origin, omit
    headers: {
      'Content-Type': 'application/json',
      // 'Content-Type': 'application/x-www-form-urlencoded',
      'Authorization': api_key
    },
    redirect: 'follow', // manual, *follow, error
    referrerPolicy: 'no-referrer', // no-referrer, *client
    body: JSON.stringify(data) // body data type must match "Content-Type" header
  });
  console.log(response)
  console.log(response.status)
  const datat =  await response.json()
  //return {"code": "122345"}
  if (response.status && response.status == "201"){return datat};
  if ("transaction" in datat){
      alert("Insuffucuent balance login to sendbox and topup your wallet");
      return
  }
  alert("Unexpected error occured");
  return
}

    const bookShipment = ((courier_id) => {
        
        let shipmentPayload = getCookie("shipment_payload");
        shipmentPayload = JSON.parse(shipmentPayload);
        console.log(typeof(shipmentPayload));

        shipmentPayload["selected_courier_id"] = courier_id;
        console.log(shipmentPayload);
        const { api_key, ...shipmentPayloadData } = shipmentPayload;
        console.log(shipmentPayloadData);
        postData('https://cors-anywhere.herokuapp.com/https://live.sendbox.co/shipping/shipments', shipmentPayloadData, api_key)
        .then((data) => {
            if (!data){return}
            console.log('maaaaaaaaaaaaaaaaaaaa') 
            document.getElementById("ship-btn").style.display = "none"
            //const codeDisplay = document.getElementById("show_dem").innerHTML
            //console.log(codeDisplay)
            //console.dir(codeDisplay)
           // codeDisplay.innerText = `Your code is ${data["code"]}`;
           alert(`Your sendbox tracking code for this order is ${data["code"]}`);
           document.getElementById("show_dem").innerHTML = `<b>Your sendbox tracking code for this order is ${data["code"]} </b>`;
            console.log(data); // JSON data parsed by `response.json()` call

});

        
    })
    
    // DOM is loaded and ready for manipulation here
});
</script>



<h2>Ship With Sendbox</h2> 

<form name="shipment-form" method="POST" id="shipment-form">
		  <table class="table">
		
            <tbody>
              <tr>
               
                <td> <strong> Wallet Balance :<?php echo ('₦'.wallet_balance());?> </strong></td>
              </tr>
            
			  <tr>
			  <td> 

			  <div id="rates">
			  <p>Select a courier </p>

			  <label><?php echo( $option_string )?></label>
			</div>
			  </td>
			  </tr>
			  
			  <tr>
			  <td>
              <p id="fee">Fee: ₦ 0.00</p>
              <p id="code_display"></p>
			  </td>
			  
			  </tr>
             
			 <tr> 
			 <td id ="show_dem">
			 <button class="btn btn-primary sendbox-shipping-add" id="ship-btn" > Request Shipment</button>
			</td>
			</tr>
		
            </tbody>
		  </table>
		  </form>

</body>
</html>