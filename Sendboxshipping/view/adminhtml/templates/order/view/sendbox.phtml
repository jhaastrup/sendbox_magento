<html>
<head>
<style>
h2{
    color: #41362f;
    font-weight: 400;
    line-height: 1.2;
    font-size: 2rem;
}
</style>
</head>
<body>
<?php


   //GET WALLET BALANCE

        function wallet_balance(){ 
       // $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
        //$resource = $objectManager->get('Magento\Framework\App\ResourceConnection');
        //$connection = $resource->getConnection();
        //$tableName = $resource->getTableName("sendbox");

      /*   $sql = "SELECT * FROM " . $tableName;
        $result = $connection->fetchAll($sql);
        foreach( $result as $value ){
         $api_key = $value['auth_token'];
        }
 */
    //$sendbox_obj = new Sendbox_Shipping_API();

    $type = "application/json";
    $request_headers = array(
        "Content-Type: " .$type,
        "Authorization: " .checkauth(),
    ); 

 
    $ch = curl_init('https://live.sendbox.co/payments/profile');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $request_headers);
    $season_data = curl_exec($ch);
    if (curl_errno($ch)) {
        throw new \Exception('Error:'. curl_error($ch));
       }
    // Show me the result
    curl_close($ch);
    $payment_obj = json_decode($season_data);
    $wallet_balance = $payment_obj->funds;
    return $wallet_balance;
     
} 



//check auth function 
function checkauth(){

    //$sendbox_obj = new Sendbox_Shipping_API();
    $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
        $resource = $objectManager->get('Magento\Framework\App\ResourceConnection');
        $connection = $resource->getConnection();
        $tableName = $resource->getTableName("sendbox");

        $sql = "SELECT * FROM " . $tableName;
        $result = $connection->fetchAll($sql);
        foreach( $result as $value ){
         $auth_header = $value['auth_token'];
        } 

    $type = "application/json";

    $request_headers = array(
        "Content-Type: " .$type,
        "Authorization: " .$auth_header,
    ); 

    $profile_data = curl_init("https://live.sendbox.co/oauth/profile");
    curl_setopt($profile_data, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($profile_data, CURLOPT_HTTPHEADER, $request_headers);
    $profile_res = curl_exec($profile_data);
    if (curl_errno($profile_data)) {
        throw new \Exception('Error:'. curl_error($profile_data));
       }
    // Show me the result
    curl_close($profile_data);
    $profile_obj = json_decode($profile_res);
    

    //$profile_url = $sendbox_obj->get_sendbox_api_url('profile');
    //$profile_res = $sendbox_obj->get_api_response_with_header($profile_url,$request_headers);
    //$profile_obj = json_decode($profile_res);
    //var_dump($profile_obj, property_exists($profile_obj, 'title'));

    
    if(isset($profile_obj->title)){
        //make a new request to oauth
    
        $s_url = 'https://live.sendbox.co/oauth/access/access_token/refresh?';
        $app_id =  $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/appid');
        
        $client_secret =  $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/clientsecret');
        foreach( $result as $value ){
            $refresh_token = $value['refresh_token'];
           }
        $url_oauth = $s_url.'app_id='.$app_id.'&client_secret='.$client_secret;
        $type = "application/json";

        $headers = array(
            "Content-Type: " .$type,
            "Refresh-Token: " .$refresh_token,
        ); 
        //var_dump($url_oauth); 

        $refresh_data = curl_init($url_oauth);
        curl_setopt($refresh_data, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($refresh_data, CURLOPT_HTTPHEADER, $request_headers);
        $oauth_res = curl_exec($refresh_data);
        if (curl_errno($refresh_data)) {
            throw new \Exception('Error:'. curl_error($refresh_data));
           }
        // Show me the result
        curl_close($refresh_data);
        $oauth_obj = json_decode($oauth_res);
  

        //$oauth_res = $sendbox_obj->get_api_response_with_header($url_oauth,$headers);
        //$oauth_obj = json_decode($oauth_res);
        if(isset($oauth_obj->access_token)){
            $new_auth = $oauth_obj->access_token;
        }
        if(isset($oauth_obj->refresh_token)){
            $new_refresh = $oauth_obj->refresh_token;
        }
       
        foreach( $result as $value ){
            $ID = $value['id'];
           } 

           $values = "auth_token='".$new_auth."', refresh_token='".$new_refresh."'";
         
           $sql_query = "UPDATE " .$tableName. " SET " . $values . " WHERE id = ". $ID . ";";
           $connection->query($sql_query);
        $auth_header = $new_auth;
    }
    else{
        foreach( $result as $value ){
            $auth_header = $value['auth_token'];
           }
    }

    return $auth_header;
} 




$orderId = $this->getRequest()->getParam('order_id');
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();

$order = $objectManager->create('\Magento\Sales\Model\OrderRepository')->get($orderId);
$entity_id = $order->getEntityId(); 
$resource = $objectManager->get('Magento\Framework\App\ResourceConnection');
$connection = $resource->getConnection();
$tableName = $resource->getTableName("sales_order");
$sql = "SELECT * FROM $tableName WHERE entity_id= $entity_id"; 
$dd = $connection->fetchAll($sql);
$d = $dd[0];
$shipment_code_cook = NULL;

if(array_key_exists('sendbox_shipment_code', $d) && $d['sendbox_shipment_code']){
    $shipment_code_cook = $d['sendbox_shipment_code'];

}

 if (!$shipment_code_cook && (isset($_COOKIE['shipment_code_'.$entity_id]))) {
    $shipment_code_cook = $_COOKIE['shipment_code_'.$entity_id]; 
      if(!array_key_exists('sendbox_shipment_code', $d)){
         
       $myquery = "ALTER TABLE $tableName ADD sendbox_shipment_code varchar(255)";
       $connection->query($myquery);

    } 
    $save_code = "UPDATE $tableName SET sendbox_shipment_code = $shipment_code_cook WHERE entity_id = $entity_id;";
    $connection->query($save_code);
     
    setcookie("shipment_code_".$entity_id, "", time() - 3600);
}; 



// Get quotes for rates
            $orderId = $this->getRequest()->getParam('order_id');
            $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
            $resource = $objectManager->get('Magento\Framework\App\ResourceConnection');
        $connection = $resource->getConnection();
        $tableName = $resource->getTableName("sendbox");
        
      

        $auth_header = checkauth();
        $type = "application/json";
        
        $request_headers = array(
        "Content-Type: " .$type,
        "Authorization: " .$auth_header,
        ); 
            $order = $objectManager->create('\Magento\Sales\Model\OrderRepository')->get($orderId);

       /*      
         $entity_id = $order->getEntityId();
         var_dump($entity_id); */
            $origin_country = "Nigeria";
            $origin_state =$this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/state');
            $origin_city = $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/city');
            $shippingaddress=$order->getShippingAddress();
            $destination_country = $shippingaddress->getCountryId();
            $destination_state = $shippingaddress->getRegionCode();
            $destination_city = $shippingaddress->getCity();
            $quantity = $order->getTotalItemCount();
            $weight = 0;
            $mee_weight = $order->getWeight();
            $weight += $mee_weight * $quantity;
            $params = array(
                'origin_country' => $origin_country,
                'origin_state' => $origin_state,
                'origin_city' => $origin_city,
                'destination_country_code'=>$destination_country,
                'destination_state' => $destination_state,
                'destination_city' => $destination_city,
                'weight' => $weight
             );  

             
         $payload = json_encode($params);
 
         // Prepare new cURL resource
         $ch = curl_init('https://live.sendbox.co/shipping/shipment_delivery_quote');
         curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
         curl_setopt($ch, CURLINFO_HEADER_OUT, true);
         curl_setopt($ch, CURLOPT_POST, true);
         curl_setopt($ch, CURLOPT_POSTFIELDS, $payload);
   
        // Set HTTP Header for POST request 
        curl_setopt($ch, CURLOPT_HTTPHEADER, array(
        'Content-Type: application/json',
        'Authorization:'.checkauth())
        );
   
      // Submit the POST request
             $result = curl_exec($ch);
             $sendbox_quotes = json_decode($result, true);
  
             //var_dump($sendbox_quotes);
           // Close cURL session handle
              curl_close($ch);  
             $rates =$sendbox_quotes['rates'];
            
             $option_string ="";
		foreach ($rates as $rates_id => $rates_values){
			$rates_names = $rates_values['name'];
			$rates_fee   = $rates_values['fee'];
			$rates_id   = $rates_values['courier_id'];
		    $option_string.='<input name="rate" type ="radio" data-courier-price = '.$rates_fee.' value='.$rates_id.'> '.$rates_names.' <br/> </input>';
        } 

        //call shipment
        $origin_name = $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/fullname');
        $origin_phone = $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/phone');
        $origin_email = $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/email');
        $origin_street = $this->helper('Sendbox\Sendboxshipping\Helper\Data')->getConfig('carriers/sendboxshipping/street');
        $f_name = $order->getCustomerFirstname();
        $l_name = $order->getCustomerLastname();
        $destination_name = $f_name ." ". $l_name;
        $destination_email = $order->getCustomerEmail();
        $destination_phone = $shippingaddress->getTelephone();
        $destination_city = $shippingaddress->getCity();
        $destination_street = $shippingaddress->getStreet()[0];
        $date = new DateTime();
		$date->modify('+1 day');
		$pickup_date = $date->format('c');
        $orderItems = $order->getAllItems();
        $item_list =[];

        foreach ($orderItems as $item) {
            //$item_data = array();
            $item_data = array(
                "name" => $item->getName(),
                "quantity" => round( $item->getQtyOrdered()),
                "value" =>  $item->getPrice(),
                "weight"=> $item->getWeight(),
               "item_type_code" =>"other",
                "package_size_code" => "medium"
            );
            

            array_push($item_list, $item_data);
           
         }
        $entity_id = $order->getEntityId();
         
         $shipment_params = array(
             'origin_name' => $origin_name,
            'origin_country' => $origin_country,
            'origin_state' => $origin_state,
            'origin_city' => $origin_city,
            'origin_phone'=> $origin_phone,
            'origin_email' =>$origin_email,
            'origin_street' => $origin_street,
            'destination_name'=> $destination_name,
            'destination_country_code'=>$destination_country,
            'destination_state' => $destination_state,
            'destination_city' => $destination_city,
            'destination_street' =>$destination_street,
            'destination_email' => $destination_email,
            'destination_phone'=>$destination_phone,
            'weight' => $weight,
            'items'=> $item_list,
            'payment_option_code' => 'prepaid',
            'channel_code' => "mobile_web",
            'pickup_date' => $pickup_date,
           'deliver_priority_code' => 'next_day',
           "api_key" => checkauth(),
           "entity_id" => $entity_id

          // 'selected_courier_id'=> $rates_id
         );  

        // $url_payload = json_encode($url_params);
         //setcookie("url_payload", $url_payload);

         $shipment_payload = json_encode($shipment_params);
       //print($shipment_payload);
       setcookie("shipment_payload", $shipment_payload);


      

?>

<script> 
console.log('check if the js works'); 

function setCookie(name,value,days) {
    var expires = "";
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days*24*60*60*1000));
        expires = "; expires=" + date.toUTCString();
    }
 document.cookie = name + "=" + (value || "")
 
 ;
}

function getCookie(name) {
    // Split cookie string and get all individual name=value pairs in an array
    var cookieArr = document.cookie.split(";");
    
    // Loop through the array elements
    for(var i = 0; i < cookieArr.length; i++) {
        var cookiePair = cookieArr[i].split("=");
        
        /* Removing whitespace at the beginning of the cookie name
        and compare it with the given string */
        if(name == cookiePair[0].trim()) {
            // Decode the cookie value and return

            return decodeURIComponent(cookiePair[1]);
        }
    }
    
    // Return null if not found
    return null;
}
   function docReady(fn) {

    // see if DOM is already available
    if (document.readyState === "complete" || document.readyState === "interactive") {
        // call on next available tick
        setTimeout(fn, 1);
    } else {
        document.addEventListener("DOMContentLoaded", fn);
    }
}    
 //console.log('sometext');
 docReady(function() {
    
    var rad = document.getElementsByName("rate");
    console.log(rad);
    rad.forEach((e) => {
        e.addEventListener('change', (() => {   
                 
            console.log(e);
    console.dir(e);
    const courierPrice = e.dataset.courierPrice;
    console.log(courierPrice)
    let feeTag = document.getElementById("fee");
    feeTag.innerText = ((courierPrice !== null && courierPrice !== undefined) ? "Fee: ₦"+ courierPrice : feeTag.innerText = "Fee: N0.00");    

}))
    })
    
    const form = document.getElementById("shipment-form");
    form.onsubmit = ((e) => {
        //console.log("sssssssssss");
        const rates = document.getElementsByName('rate');
        let rate_id;
        rates.forEach((e) => {
            if (e.checked){
                rate_id = e.value;
            };

        })
        if (!rate_id){
            alert("select rate")
            return
        }
        console.log('ssssssssssssssssssssss');

        bookShipment(rate_id);
        console.log("eoeeoje");
        e.preventDefault();
    })
    async function postData(url = '', data = {}, api_key=null) {
  // Default options are marked with *
  const response = await fetch(url, {
    method: 'POST', // *GET, POST, PUT, DELETE, etc.
    mode: 'cors', // no-cors, *cors, same-origin
    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
    credentials: 'same-origin', // include, *same-origin, omit
    headers: {
      'Content-Type': 'application/json',
      // 'Content-Type': 'application/x-www-form-urlencoded',
      'Authorization': api_key
    },
    redirect: 'follow', // manual, *follow, error
    referrerPolicy: 'no-referrer', // no-referrer, *client
    body: JSON.stringify(data) // body data type must match "Content-Type" header
  });
  console.log(response)
  console.log(response.status)
  const datat =  await response.json()
  //return {"code": "122345"}
  if (response.status && response.status == "201"){return datat};
  if ("transaction" in datat){
      alert("Insuffucuent balance login to sendbox and topup your wallet");
      return
  }
  alert("Unexpected error occured");
  return
}

    const bookShipment = ((courier_id) => {
        
        let shipmentPayload = getCookie("shipment_payload");
        console.log(shipmentPayload);
      
        shipmentPayload = JSON.parse(shipmentPayload);
        console.log(typeof(shipmentPayload));

        shipmentPayload["selected_courier_id"] = courier_id;
        console.log(shipmentPayload);
        const { api_key, entity_id, ...shipmentPayloadData } = shipmentPayload;
        for(const key in shipmentPayloadData){
			let value = shipmentPayloadData[key];
			if (typeof(value) === 'string' || value instanceof String){
				console.log(value, value.indexOf("+"))
				let newVal = "";

				for (i=0; i<value.length; i++){
					if(value[i] !== "+"){
						newVal+=value[i] 
					}
					if (value[i]  === "+"){
						newVal += " ";
					}
				}
			shipmentPayloadData[key] = newVal;

			}
		}

        console.log(shipmentPayloadData);
        postData('https://cors-anywhere.herokuapp.com/https://live.sendbox.co/shipping/shipments', shipmentPayloadData, api_key)
        .then((data) => {
            if (!data){return}
            
                 const shipment_code = data.code;
                const formData  = new FormData();
                
                formData.append("shipment_code", shipment_code); 
               
                console.log(shipment_code, entity_id);

                setCookie(`shipment_code_${entity_id}`,shipment_code);
                location.reload();
                
            document.getElementById("ship-btn").style.display = "none" 
           
           alert(`Your sendbox tracking code for this order is ${data["code"]}`);
           document.getElementById("show_dem").innerHTML = `<b>Your sendbox tracking code for this order is ${data["code"]} </b>`;
            console.log(data); // JSON data parsed by `response.json()` call

});

        
 })
    // DOM is loaded and ready for manipulation here
});
</script>



<h2>Ship With Sendbox</h2> 

<form name="shipment-form" method="POST" id="shipment-form"> 
<?php
              
              if($shipment_code_cook):?> 
              <b>  your tracking code for this shipment is <?php echo( $shipment_code_cook )?></b>
              <?php
            else:?>
		  <table class="table">
		
            <tbody>
              <tr>
               
                <td> <strong> Wallet Balance :<?php echo ('₦'.wallet_balance());?> </strong></td>
              </tr>
            
			  <tr>
			  <td> 

			  <div id="rates">
			  <p>Select a courier </p>

			  <label><?php echo( $option_string )?></label>
			</div>
			  </td>
			  </tr>
			  
			  <tr>
			  <td>
              <p id="fee">Fee: ₦ 0.00</p>
              <p id="code_display"></p>
			  </td>
			  
			  </tr>
			 <tr> 
			 <td id ="show_dem">
			 <button class="btn btn-primary sendbox-shipping-add" id="ship-btn" > Request Shipment</button>
			</td>
			</tr>
			<?php endif; ?>
            </tbody>
		  </table>
		  </form>

</body>
</html>